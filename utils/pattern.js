const pattern = {
	// 手机号
	Mobile: () => /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\d{8}$/,
	// 座机
	Landline: () => /^(0\d{2,3})-?(\d{7,8})$/,
	// 字母和数字
	LettersAndNum: () => /^[A-Za-z0-9]+$/,
	// 字母 中文 数字
	NoSpecial: () => /^[\u4e00-\u9fa5a-zA-Z0-9]+$/,
	//2-20个中文字符正则
	Name: () => /^[\u4e00-\u9fa5]{2,20}$/,
	Email:() => /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
	// 身份证号
	// IdCard:() => /^(([1][1-5])|([2][1-3])|([3][1-7])|([4][1-6])|([5][0-4])|([6][1-5])|([7][1])|([8][1-2]))\d{4}(([1][9]\d{2})|([2]\d{3}))(([0][1-9])|([1][0-2]))(([0][1-9])|([1-2][0-9])|([3][0-1]))\d{3}[0-9xX]$/,
	IdCard:() => /^[1-9]\d{5}(19|20)\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,
	// 港澳身份证
	IdCardHM:() => /^([A-Z]\d{6,10}(\(\w{1}\))?)$/,
	// 台湾身份证
	IdCardTaiwan:() => /^\d{8}|^[a-zA-Z0-9]{10}|^\d{18}$/,
	// 护照
	passport:() => /^([a-zA-z]|[0-9]){5,17}$/,
	// 军官证
	officerCard:() => /^[\u4E00-\u9FA5](字第)([0-9a-zA-Z]{4,8})(号?)$/,
	// 驾驶证
	driveCard:() => /\\d{12}$/,
	// 户口本
	householdCard:() => /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/,
	// 邮编
	PostalCode:() => /^[1-9]\d{5}$/,
	// 大于零浮点数
	greaterZero:() => /^\d+(\.\d+)?$/,
	// 非负整数
	positiveNum:() => /^\d+$/,
	// 经度
	longitude:() => /^[+-]?(0?d{1,2}.d{1,6}|1[0-7]?d{1}.d{1,6}|180.0{1,6})$/,
	// 纬度
	latitude:() => /^[+-]?([0-8]?d{1}.d{1,6}|90.0{1,6})$/,
	// 网址
	website:() => /[(https?|ftp|file)://][-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/,
	// qq 号
	QQ:() => /^[1-9][0-9]\d{4,9}$/,
	// 座机
	landLine:() => /^[0][1-9]{2,3}-[0-9]{5,10}$/,
	// mp4结尾
	Video: (e) => /^.*\.(mp|MP)4$/.test(e),
	// mp3 结尾
	Audio: (e) => /^.*\.(mp|MP)3$/.test(e),
	// word
	Word: (e) => /^.*\.(doc|docx)$/.test(e),
	// excel
	Excel: (e) => /^.*\.(xlsx|xls)$/.test(e),
	// pdf
	Pdf: (e) => /^.*\.(pdf)$/.test(e),
	// pdf
	Image: (e) => /^.*\.(jpg|jpeg|png|gif)$/.test(e),
	//校验身份证
	checkIdCard(code) {
		// 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X
		const city = {
			11: "北京",
			12: "天津",
			13: "河北",
			14: "山西",
			15: "内蒙古",
			21: "辽宁",
			22: "吉林",
			23: "黑龙江 ",
			31: "上海",
			32: "江苏",
			33: "浙江",
			34: "安徽",
			35: "福建",
			36: "江西",
			37: "山东",
			41: "河南",
			42: "湖北 ",
			43: "湖南",
			44: "广东",
			45: "广西",
			46: "海南",
			50: "重庆",
			51: "四川",
			52: "贵州",
			53: "云南",
			54: "西藏 ",
			61: "陕西",
			62: "甘肃",
			63: "青海",
			64: "宁夏",
			65: "新疆",
			71: "台湾",
			81: "香港",
			82: "澳门",
			91: "国外 "
		};
		let tip = "";
		let pass = true;
	
		if (
			!code ||
			!/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|X)$/i.test(
				code
			)
		) {
			tip = "身份证号格式错误";
			pass = false;
		} else if (!city[code.substr(0, 2)]) {
			tip = "地址编码错误";
			pass = false;
		} else {
			//18位身份证需要验证最后一位校验位
			if (code.length == 18) {
				code = code.split("");
				//∑(ai×Wi)(mod 11)
				//加权因子
				const factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
				//校验位
				const parity = [1, 0, "X", 9, 8, 7, 6, 5, 4, 3, 2];
				let sum = 0;
				let ai = 0;
				let wi = 0;
				for (let i = 0; i < 17; i++) {
					ai = code[i];
					wi = factor[i];
					sum += ai * wi;
				}
				const last = parity[sum % 11];
				if (parity[sum % 11] != code[17]) {
					tip = "校验位错误";
					pass = false;
				}
			}
		}
		return pass;
	}
}

export default pattern
